version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: claude-template-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: claude_template_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: claude-template-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/claude_template_dev
      DATABASE_LOGGING: "true"
      JWT_SECRET: your-super-secret-jwt-key-change-this
      SWAGGER_ENABLED: "true"
      LOG_LEVEL: debug
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount source code for hot reloading
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./.sequelizerc:/app/.sequelizerc
      # Prevent node_modules from being overwritten
      - /app/node_modules
    command: npm run dev

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: claude-template-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data: